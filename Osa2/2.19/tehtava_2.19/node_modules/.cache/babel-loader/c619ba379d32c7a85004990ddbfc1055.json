{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jerem\\\\OneDrive\\\\Tiedostot\\\\GitHub\\\\Fullstack-developer-course\\\\Osa2\\\\2.19\\\\tehtava_2.19\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Note from './Components/Note';\nimport './index.css';\nimport noteService from './Services/notes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Notification = _ref => {\n  let {\n    message\n  } = _ref;\n\n  if (message === null) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Notification;\n\nconst App = () => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const toggleImportanceOf = id => {\n    //Jokaiselle muistiinpanolle id-kenttään perustuva yksilöivä url.\n    //const url = `http://localhost:3001/notes/${id}`\n    //Taulukon find-metodilla etsitään muutettava muistiinpano ja talletetaan muuttujaan -note- viite siihen. \n    const note = notes.find(n => n.id === id); //Luodaan uusi olio, jonka sisältö on sama kuin vanhan olion sisältö. Poislukien kenttä important.\n\n    const changedNote = { ...note,\n      important: !note.important\n    };\n    /*\n    axios.put(url, changedNote).then(response => {\n      setNotes(notes.map(note => note.id !== id ? note : response.data))\n    })\n    */\n\n    noteService.update(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote));\n    }).catch(error => {\n      /*\n      alert(\n        `the note '${note.content}' was already deleted from server`\n      )\n      */\n      setNotes(notes.filter(n => n.id !== id));\n    });\n  };\n\n  const deleteObjectOf = id => {\n    const deleteNote = notes.find(n => n.id === id);\n    const deletedNote = { ...deleteNote\n    };\n    const confirm = window.confirm(`Are you sure?`);\n\n    if (confirm) {\n      noteService.deleteThis(id, deletedNote).then(deletednote => {\n        //setNotes(notes.map(note => note.id ? note : deletednote))\n        setNotes(notes.filter(n => n.id !== id));\n      }).catch(error => {\n        alert(`the user '${deleteNote.name}' has already been deleted from the server.`);\n        setNotes(notes.filter(n => n.id !== id));\n      });\n    } else {}\n  };\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      name: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    };\n    /*\n    axios\n          .post('http://localhost:3001/notes', noteObject)\n          .then(response => {\n            setNotes(notes.concat(response.data))\n            setNewNote('')\n          }) \n    */\n\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote('');\n    });\n  };\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newNote,\n          onChange: handleNoteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"Submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Numbers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n          note: note,\n          deleteObject: () => deleteObjectOf(note.id),\n          toggleImportance: () => toggleImportanceOf(note.id)\n        }, note.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"show \", showAll ? 'important' : 'all']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"YoJCZcz2gqmCo+muBMJeaVoxZWM=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Notification\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","useEffect","Note","noteService","Notification","message","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","getAll","then","initialNotes","toggleImportanceOf","id","note","find","n","changedNote","important","update","returnedNote","map","catch","error","filter","deleteObjectOf","deleteNote","deletedNote","confirm","window","deleteThis","deletednote","alert","name","addNote","event","preventDefault","noteObject","date","Date","toISOString","Math","random","create","concat","handleNoteChange","console","log","target","value","notesToShow"],"sources":["C:/Users/jerem/OneDrive/Tiedostot/GitHub/Fullstack-developer-course/Osa2/2.19/tehtava_2.19/src/App.js"],"sourcesContent":["import {useState, useEffect} from 'react'\nimport Note from './Components/Note'\nimport './index.css'\nimport noteService from './Services/notes'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className='error'>\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n    noteService\n    .getAll()\n    .then(initialNotes => {\n      setNotes(initialNotes)\n    })\n}, [])\n\n  const toggleImportanceOf = id => {\n    //Jokaiselle muistiinpanolle id-kenttään perustuva yksilöivä url.\n    //const url = `http://localhost:3001/notes/${id}`\n    //Taulukon find-metodilla etsitään muutettava muistiinpano ja talletetaan muuttujaan -note- viite siihen. \n    const note = notes.find(n => n.id === id)\n    //Luodaan uusi olio, jonka sisältö on sama kuin vanhan olion sisältö. Poislukien kenttä important.\n    const changedNote = {...note, important: !note.important}\n\n    /*\n    axios.put(url, changedNote).then(response => {\n      setNotes(notes.map(note => note.id !== id ? note : response.data))\n    })\n    */\n  noteService\n  .update(id, changedNote).then(returnedNote => {\n    setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n  })\n  .catch(error => {\n    \n    /*\n    alert(\n      `the note '${note.content}' was already deleted from server`\n    )\n    */\n    setNotes(notes.filter(n => n.id !== id))\n  })\n}\nconst deleteObjectOf = id => {\n  const deleteNote = notes.find(n => n.id === id)\n  const deletedNote = {...deleteNote}\n\n  const confirm = window.confirm(`Are you sure?`)\n  if(confirm) {\n    noteService\n    .deleteThis(id, deletedNote).then(deletednote => {\n      //setNotes(notes.map(note => note.id ? note : deletednote))\n      setNotes(notes.filter(n => n.id !== id))\n    })\n    .catch(error => {\n      alert(\n        `the user '${deleteNote.name}' has already been deleted from the server.`\n      )\n      setNotes(notes.filter(n => n.id !== id))\n    })\n  } else {\n  \n}\n}\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      name: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n    /*\n    axios\n          .post('http://localhost:3001/notes', noteObject)\n          .then(response => {\n            setNotes(notes.concat(response.data))\n            setNewNote('')\n          }) \n    */\n  noteService\n  .create(noteObject)\n  .then(returnedNote => {\n    setNotes(notes.concat(returnedNote))\n    setNewNote('')\n  })\n}\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n  const notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important)\n\n  return (\n      <div>\n        <h1>Phonebook</h1>\n        \n       <form onSubmit={addNote}>\n        <div>\n        Name: <input \n        value={newNote}\n        onChange={handleNoteChange}\n        />\n        </div>\n        <div>\n        <button type=\"Submit\">Save</button>\n        </div>\n       </form>\n\n       <div>\n        <h2>Numbers</h2>\n        <ul>\n          {notesToShow.map(note =>\n            <Note key={note.id} note={note} deleteObject={() => deleteObjectOf(note.id) } toggleImportance={() => toggleImportanceOf(note.id)} />\n       )}       \n       </ul>\n\n         <button onClick={() => setShowAll(!showAll)}>\n            show {showAll ? 'important' : 'all' }\n          </button>  \n          \n        </div>\n\n      </div>\n  )\n}\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module"}